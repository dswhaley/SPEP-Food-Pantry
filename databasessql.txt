-- Drop the CheckedIn table if it exists first (depends on Neighbor and Week)
DROP TABLE IF EXISTS CheckedIn;

-- Drop the Address table if it exists (depends on Neighbor)
DROP TABLE IF EXISTS Address;

-- Drop the Neighbor table if it exists
DROP TABLE IF EXISTS Neighbor;

-- Drop the Week table if it exists (no dependencies)
DROP TABLE IF EXISTS Week;

-- Create the Neighbor table if not exists
CREATE TABLE IF NOT EXISTS Neighbor (
    nid INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    phonenumber VARCHAR(20),
    firstname VARCHAR(50),
    lastname VARCHAR(50),
    email VARCHAR(100),
    creationdate VARCHAR(10),  -- Kept as VARCHAR(10)
    lastvisit VARCHAR(10),     -- Kept as VARCHAR(10)
    flag INT,
    numberofpeople INT,
    numseniors INT,
    numadults INT,
    numchildren INT,
    notes TEXT,
    CONSTRAINT unique_neighbor_name_phone UNIQUE (firstname, lastname, phonenumber) -- Added unique constraint
);

-- Create the Week table if not exists
CREATE TABLE IF NOT EXISTS Week (
    startdate VARCHAR(10),     -- Kept as VARCHAR(10)
    enddate VARCHAR(10),       -- Kept as VARCHAR(10)
    PRIMARY KEY (startdate, enddate)
);

-- Create the CheckedIn table if not exists
CREATE TABLE IF NOT EXISTS CheckedIn (
    nid INT,
    startdate VARCHAR(10),     -- Kept as VARCHAR(10)
    enddate VARCHAR(10),       -- Kept as VARCHAR(10)
    PRIMARY KEY (nid, startdate, enddate),
    FOREIGN KEY (nid) REFERENCES Neighbor(nid) ON DELETE CASCADE,
    FOREIGN KEY (startdate, enddate) REFERENCES Week(startdate, enddate) ON DELETE CASCADE
);

-- Create the Address table if not exists
CREATE TABLE IF NOT EXISTS Address (
    nid INT,
    town_city VARCHAR(100),
    streetaddress VARCHAR(200),
    zipcode VARCHAR(10),
    PRIMARY KEY (nid, town_city, streetaddress, zipcode),
    FOREIGN KEY (nid) REFERENCES Neighbor(nid) ON DELETE CASCADE
);